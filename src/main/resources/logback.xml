<configuration>
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

    <!-- todo - we want an async logger that broadcasts rather than logging to disk - clearly console output is not what we want! -->
    <appender name="LOGFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/moko-api.log</file>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>logs/moko-api.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>8</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- or whenever the file size reaches 100MB -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_LOGFILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>500</queueSize>
        <neverBlock>true</neverBlock>
        <appender-ref ref="LOGFILE"/>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <root level="ERROR">
        <appender-ref ref="ASYNC_LOGFILE" />
    </root>
</configuration>